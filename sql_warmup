
-- SEE HOW MANY YOU CAN GET THROUGH BY 10am :) 

-- What's the title and ID of the longest film?
-- BONUS points if you use a subquery :) 

SELECT film_id, title, length
FROM film
WHERE length = (SELECT MAX(length)FROM film);


-- What is the title and ID of the film with the lowest replacement cost?
-- BONUS points if you use a subquery :) 

SELECT film_id, title, replacement_cost
FROM film
WHERE replacement_cost = (SELECT MIN(replacement_cost)FROM film);

-- What is the tile and ID of the film with the highest rental_rate?
SELECT  film_id, title, max(rental_rate)
FROM film
GROUP BY 1, 2;


-- Show the payment_id's of all transactions after or on May 1st 2007
SELECT payment_id, payment_date
FROM payment
WHERE payment_date >= '2007-05-01';

-- Show all payment ID's and payment date's with a transaction amount less than $3.

SELECT payment_id, payment_date, amount
FROM payment
WHERE amount< 3;


-- Get the emails of all customers that shop at store 1 that are inactive (use 'active')

SELECT  email, store_id, active
FROM customer
WHERE active = 0
AND store_id = 1;

--How much have these customers spent? (Use code from the previous query to
-- make a subquery or a CTE to solve this one.) 

SELECT  c.email, c.store_id, c.active, p.amount
FROM customer AS c
JOIN payment as p ON c.customer_id = p.customer_id ;
WHERE active = 0
AND store_id = 1;

